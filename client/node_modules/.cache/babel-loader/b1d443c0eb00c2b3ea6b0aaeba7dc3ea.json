{"ast":null,"code":"var _jsxFileName = \"/Users/freddyflores/flatiron/code/Mod5/Mod5-Project/client/src/EditPrices.js\";\nimport React from 'react';\n\nclass EditPrices extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.updatePrices = e => {\n      e.preventDefault();\n      let target = e.target;\n      let formData = {};\n\n      for (let i = 0; i < target.length - 1; i++) {\n        formData[parseInteger(target.elements[i].id)] = parseFloat(target.elements[i].value);\n      }\n\n      console.log('formData', formData);\n\n      for (const item in formData) {\n        if (!Number.isFinite(formData[item])) {\n          // if(!isNumber(formData[item])){\n          return alert(\"Invalid Input\");\n        }\n      } // debugger\n\n\n      fetch(\"http://localhost:3000/api/v1/items\", {\n        method: \"POST\",\n        headers: {\n          \"Authorization\": \"Bearer \".concat(localStorage.token),\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          price: formData,\n          id: localStorage.user_id\n        })\n      }); // .then(res => res.json())\n      // .then(user => this.props.updateUser(user))\n    };\n\n    this.goHome = () => {\n      this.props.selectedLink(\"main\");\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: e => {\n        this.updatePrices(e);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, this.props.user.items.map(item => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, item.item_type, \" - \", item.name), React.createElement(\"input\", {\n      className: \"ui label input\",\n      type: \"number\",\n      step: \"0.01\",\n      id: item.id,\n      defaultValue: item.price,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }))), React.createElement(\"input\", {\n      className: \"ui button\",\n      type: \"submit\",\n      value: \"Update Prices\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      onClick: () => this.goHome(),\n      className: \"ui massive button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"HOME\"));\n  }\n\n}\n\nexport default EditPrices;","map":{"version":3,"sources":["/Users/freddyflores/flatiron/code/Mod5/Mod5-Project/client/src/EditPrices.js"],"names":["React","EditPrices","Component","updatePrices","e","preventDefault","target","formData","i","length","parseInteger","elements","id","parseFloat","value","console","log","item","Number","isFinite","alert","fetch","method","headers","localStorage","token","body","JSON","stringify","price","user_id","goHome","props","selectedLink","render","user","items","map","item_type","name"],"mappings":"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","sourcesContent":["import React from 'react'\n\nclass EditPrices extends React.Component {\n  \n    \n  updatePrices = (e) => {\n\n    e.preventDefault()\n   \n    let target   = e.target;\n    let formData = {};\n\n    for (let i = 0; i < target.length-1; i++) {\n        formData[parseInteger(target.elements[i].id)] = parseFloat(target.elements[i].value);\n    }\n    console.log('formData', formData);\n    \n    for (const item in formData) {\n      if(!Number.isFinite(formData[item])){\n      // if(!isNumber(formData[item])){\n        return alert(\"Invalid Input\")\n      }\n    }\n\n\n    // debugger\n    \n    fetch(`http://localhost:3000/api/v1/items`,\n    {\n      method: \"POST\",\n      headers: {\n        \"Authorization\": `Bearer ${localStorage.token}`,\n        \"Content-Type\" : \"application/json\"\n      },\n      body: JSON.stringify({\n        price: formData,\n        id: localStorage.user_id\n        })\n    })\n    // .then(res => res.json())\n    // .then(user => this.props.updateUser(user))\n\n  }\n\n\n  goHome = () => {\n      this.props.selectedLink(\"main\")\n  }\n\n\n\n  render(){\n  return(\n      <div>\n          <form onSubmit={(e) => {\n              this.updatePrices(e)\n              }}>\n              {this.props.user.items.map(item => \n                <div>\n                    <label>{item.item_type} - {item.name}</label>\n                    <input className=\"ui label input\" type='number' step='0.01' id={item.id} defaultValue={item.price} required/>\n                </div> \n              )} \n              <input className=\"ui button\" type='submit' value='Update Prices'/>  \n          </form>\n\n          <br/>\n          <br/>\n          <p onClick={()=>this.goHome()} className=\"ui massive button\">\n              HOME\n          </p>\n      </div>\n  )}\n\n}\n  \n  export default EditPrices;"]},"metadata":{},"sourceType":"module"}