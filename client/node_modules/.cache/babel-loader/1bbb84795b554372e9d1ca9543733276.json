{"ast":null,"code":"var _jsxFileName = \"/Users/freddyflores/flatiron/code/Mod5/Mod5-Project/client/src/Dashboard.js\";\nimport React from 'react';\nimport NavBar from './NavBar.js';\nimport Login from './Login.js';\n\nclass Dash extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selected: 'main',\n      user: {}\n    };\n\n    this.selectedLink = value => {\n      this.setState({\n        selected: value\n      });\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:3000/api/v1/users/\".concat(localStorage.user_id), {\n      method: \"GET\",\n      headers: {\n        Authorization: \"Bearer \".concat(localStorage.token)\n      }\n    }).then(res => res.json()).then(user => {\n      this.setState({\n        user: user\n      });\n    });\n  }\n\n  renderSwitch(param) {\n    switch (param) {\n      case 'match':\n        return React.createElement(Form, {\n          setTerms: this.setTermsList,\n          selectedLink: this.props.selectedLink,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        });\n\n      case 'messages':\n        return React.createElement(MessageList, {\n          users: this.props.users,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        });\n\n      case 'matches':\n        return React.createElement(MatchTileList, {\n          users: this.state.matchedUsers,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        });\n\n      case 'searchTerms':\n        return React.createElement(SearchTermList, {\n          terms: this.state.filteredTerms,\n          submitTerms: this.submitTerms,\n          filter: this.filter,\n          selectedLink: this.props.selectedLink,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        });\n\n      default:\n        return null;\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"main_container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, this.renderSwitch(this.props.selection));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, localStorage.token ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(NavBar, {\n      selectedLink: this.selectedLink,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    })) : React.createElement(Login, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Dash;","map":{"version":3,"sources":["/Users/freddyflores/flatiron/code/Mod5/Mod5-Project/client/src/Dashboard.js"],"names":["React","NavBar","Login","Dash","Component","state","selected","user","selectedLink","value","setState","componentDidMount","fetch","localStorage","user_id","method","headers","Authorization","token","then","res","json","renderSwitch","param","setTermsList","props","users","matchedUsers","filteredTerms","submitTerms","filter","render","selection"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,KAAP,MAAkB,YAAlB;;AAEA,MAAMC,IAAN,SAAmBH,KAAK,CAACI,SAAzB,CAAkC;AAAA;AAAA;AAAA,SAG9BC,KAH8B,GAGxB;AACFC,MAAAA,QAAQ,EAAE,MADR;AAEFC,MAAAA,IAAI,EAAE;AAFJ,KAHwB;;AAAA,SAQhCC,YARgC,GAQlBC,KAAD,IAAS;AACpB,WAAKC,QAAL,CAAc;AACZJ,QAAAA,QAAQ,EAAEG;AADE,OAAd;AAGD,KAZ+B;AAAA;;AAchCE,EAAAA,iBAAiB,GAAE;AACjBC,IAAAA,KAAK,8CAAuCC,YAAY,CAACC,OAApD,GACL;AACEC,MAAAA,MAAM,EAAE,KADV;AAEEC,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,mBAAYJ,YAAY,CAACK,KAAzB;AADN;AAFX,KADK,CAAL,CAOCC,IAPD,CAOMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAPb,EAQCF,IARD,CAQMZ,IAAI,IAAI;AAAC,WAAKG,QAAL,CAAc;AAC3BH,QAAAA,IAAI,EAAEA;AADqB,OAAd;AAEZ,KAVH;AAYD;;AAEDe,EAAAA,YAAY,CAACC,KAAD,EAAQ;AACd,YAAOA,KAAP;AACA,WAAK,OAAL;AACI,eAAO,oBAAC,IAAD;AAAM,UAAA,QAAQ,EAAE,KAAKC,YAArB;AAAmC,UAAA,YAAY,EAAE,KAAKC,KAAL,CAAWjB,YAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;;AACJ,WAAK,UAAL;AACI,eAAO,oBAAC,WAAD;AAAa,UAAA,KAAK,EAAE,KAAKiB,KAAL,CAAWC,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;;AACJ,WAAK,SAAL;AACI,eAAO,oBAAC,aAAD;AAAe,UAAA,KAAK,EAAE,KAAKrB,KAAL,CAAWsB,YAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;;AACJ,WAAK,aAAL;AACI,eAAO,oBAAC,cAAD;AAAgB,UAAA,KAAK,EAAE,KAAKtB,KAAL,CAAWuB,aAAlC;AAAiD,UAAA,WAAW,EAAE,KAAKC,WAAnE;AAAgF,UAAA,MAAM,EAAE,KAAKC,MAA7F;AAAqG,UAAA,YAAY,EAAE,KAAKL,KAAL,CAAWjB,YAA9H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;;AACJ;AACI,eAAO,IAAP;AAVJ;AAYH;;AAELuB,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKT,YAAL,CAAkB,KAAKG,KAAL,CAAWO,SAA7B,CADL,CADJ;AAKC;;AAGHD,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKlB,YAAY,CAACK,KAAb,GACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,oBAAC,MAAD;AAAQ,MAAA,YAAY,EAAE,KAAKV,YAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,CADA,GAKA,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANL,CADF;AAWD;;AAjE+B;;AAqElC,eAAeL,IAAf","sourcesContent":["import React from 'react'\nimport NavBar from './NavBar.js'\nimport Login from './Login.js'\n\nclass Dash extends React.Component{\n\n\n    state={\n        selected: 'main',\n        user: {}\n    }\n\n  selectedLink=(value)=>{\n    this.setState({\n      selected: value\n    })\n  }\n\n  componentDidMount(){\n    fetch(`http://localhost:3000/api/v1/users/${localStorage.user_id}`,\n    {\n      method: \"GET\",\n      headers: {\n        Authorization: `Bearer ${localStorage.token}`\n      } \n    })\n    .then(res => res.json())\n    .then(user => {this.setState({\n      user: user \n    })}\n    ) \n  }\n\n  renderSwitch(param) {\n        switch(param) {\n        case 'match':\n            return <Form setTerms={this.setTermsList} selectedLink={this.props.selectedLink}/>\n        case 'messages':\n            return <MessageList users={this.props.users}/>\n        case 'matches': \n            return <MatchTileList users={this.state.matchedUsers} />\n        case 'searchTerms': \n            return <SearchTermList terms={this.state.filteredTerms} submitTerms={this.submitTerms} filter={this.filter} selectedLink={this.props.selectedLink}/>\n        default: \n            return null; \n        }\n    }\n\nrender() {\n    return(\n        <div className=\"main_container\">\n            {this.renderSwitch(this.props.selection)}   \n        </div>\n    )\n    }\n\n\n  render() {\n    return(\n      <div>\n         { localStorage.token\n         ? <div>\n              <NavBar selectedLink={this.selectedLink}/>\n              {/* <MainContainer selection={this.state.selected} users={this.state.users} selectedLink={this.selectedLink} matches={this.state.matches}/> */}\n           </div>\n         : <Login/>\n         }  \n      </div>\n    )\n  }\n    \n}\n\nexport default Dash "]},"metadata":{},"sourceType":"module"}