{"ast":null,"code":"var _jsxFileName = \"/Users/freddyflores/flatiron/code/Mod5/Mod5-Project/client/src/ticket/TicketButtons.js\";\nimport React from 'react';\n\nclass Buttons extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      items: this.props.user.items,\n      buttonMenu: 'category',\n      colorDescriptions: [\"white\", \"black\", \"blue\", 'red', 'tan', 'brown', 'gray', 'pink'],\n      fabricDescriptions: ['silk', 'linen', 'rayon', 'wool']\n    };\n\n    this.buttonMenuSelect = value => {\n      this.setState({\n        buttonMenu: value\n      });\n    };\n\n    this.typeSelect = item => {\n      this.props.setCurrentItem(item);\n      this.buttonMenuSelect('description');\n    };\n\n    this.newItem = () => {\n      this.props.newItem();\n      this.buttonMenuSelect('');\n    };\n\n    this.categorySelect = select => {\n      this.setState;\n      this.buttonMenuSelect(select);\n    };\n  }\n\n  renderSwitch(param) {\n    switch (param) {\n      case 'category':\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          onClick: () => this.buttonMenuSelect('laundry'),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }, \"Laundry\"), React.createElement(\"button\", {\n          onClick: () => this.buttonMenuSelect('dryclean'),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, \"DryClean\"), \"bottom menu buttons\");\n\n      case 'laundry':\n        return this.state.items.filter(item => item.item_type === \"laundry\").map(item => React.createElement(\"button\", {\n          onClick: () => {\n            this.typeSelect(item);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, item.name));\n\n      case 'dryclean':\n        return this.state.items.filter(item => item.item_type === \"dry clean\").map(item => React.createElement(\"button\", {\n          onClick: () => {\n            this.typeSelect(item);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, item.name));\n\n      case 'description':\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, this.state.colorDescriptions.map(color => React.createElement(\"button\", {\n          onClick: () => {\n            this.props.addDescription(color);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, color)), this.state.fabricDescriptions.map(fabric => React.createElement(\"button\", {\n          onClick: () => {\n            this.props.addDescription(fabric);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, fabric)), React.createElement(\"button\", {\n          onClick: () => this.props.newItem(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, \"NEW ITEM\"));\n\n      default:\n        return null;\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, this.renderSwitch(this.state.buttonMenu)));\n  }\n\n}\n\nexport default Buttons;","map":{"version":3,"sources":["/Users/freddyflores/flatiron/code/Mod5/Mod5-Project/client/src/ticket/TicketButtons.js"],"names":["React","Buttons","Component","state","items","props","user","buttonMenu","colorDescriptions","fabricDescriptions","buttonMenuSelect","value","setState","typeSelect","item","setCurrentItem","newItem","categorySelect","select","renderSwitch","param","filter","item_type","map","name","color","addDescription","fabric","render"],"mappings":"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","sourcesContent":["import React from 'react'\n\nclass Buttons extends React.Component {\n  \n    state={\n        items: this.props.user.items,\n        \n        buttonMenu: 'category',\n\n        colorDescriptions : [\"white\",\"black\",\"blue\",'red', 'tan', 'brown', 'gray', 'pink'],\n\n        fabricDescriptions : ['silk', 'linen', 'rayon', 'wool']\n\n    }\n\n    buttonMenuSelect=(value)=>{\n        this.setState({\n        buttonMenu: value\n        })\n    }\n    \n    typeSelect=(item)=>{\n        this.props.setCurrentItem(item)\n        this.buttonMenuSelect('description')\n    }\n\n    newItem = () => {\n        this.props.newItem()\n        this.buttonMenuSelect('')\n    }\n\n    categorySelect = (select) => {\n        this.setState\n        this.buttonMenuSelect(select)\n    }\n  \n    \n    renderSwitch(param) {\n        switch(param) {\n            case 'category':\n                return (\n                <div>\n                    <button onClick={()=>this.buttonMenuSelect('laundry')}>Laundry</button>\n                    <button onClick={()=>this.buttonMenuSelect('dryclean')}>DryClean</button>\n                \n                    bottom menu buttons\n                </div>\n                )\n            case 'laundry':\n                return this.state.items.filter(item => item.item_type === \"laundry\").map(item => <button onClick={()=>{ this.typeSelect(item)}} >{item.name}</button>)\n            case 'dryclean':\n                return this.state.items.filter(item => item.item_type === \"dry clean\").map(item => <button onClick={()=>{ this.typeSelect(item)}} >{item.name}</button>)\n            case 'description':\n                return (\n                    <div>\n                        {this.state.colorDescriptions.map(color => <button onClick={()=>{ this.props.addDescription(color)}} >{color}</button>)}\n                        {this.state.fabricDescriptions.map(fabric => <button onClick={()=>{ this.props.addDescription(fabric)}} >{fabric}</button>)}\n                        <button onClick={()=> this.props.newItem()}>NEW ITEM</button>\n                    </div>\n                )\n            default: \n                return null; \n        }\n    }\n    \n    \n      render() {\n        return(\n          <div>\n            {  \n                <div>\n                    {this.renderSwitch(this.state.buttonMenu)}  \n              </div>\n            \n            }  \n          </div>\n        )\n      }\n\n    \n  \n\n  }\n  \n  export default Buttons;"]},"metadata":{},"sourceType":"module"}