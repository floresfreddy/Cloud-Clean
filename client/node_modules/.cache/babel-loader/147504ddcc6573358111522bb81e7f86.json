{"ast":null,"code":"var _jsxFileName = \"/Users/freddyflores/flatiron/code/Mod5/Mod5-Project/client/src/ticket/TicketButtons.js\";\nimport React from 'react';\n\nclass Buttons extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      items: this.props.user.items,\n      buttonMenu: 'category',\n      colorDescriptions: [\"white\", \"black\", \"blue\", 'red', 'tan', 'brown', 'gray', 'pink'],\n      fabricDescriptions: ['silk', 'linen', 'rayon', 'wool']\n    };\n\n    this.buttonMenuSelect = value => {\n      this.setState({\n        buttonMenu: value\n      });\n    };\n\n    this.categorySelect = select => {\n      this.setState({\n        category: select\n      });\n      this.buttonMenuSelect(select);\n    };\n\n    this.typeSelect = item => {\n      this.props.setCurrentItem(item);\n      this.buttonMenuSelect('description');\n    };\n\n    this.newItem = () => {\n      this.props.newItem();\n      this.buttonMenuSelect(this.state.category);\n    };\n\n    this.placeOrder = () => {\n      this.buttonMenuSelect();\n      this.props.placeOrder();\n    };\n  }\n\n  renderSwitch(param) {\n    switch (param) {\n      case 'category':\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          className: \"ui massive button ticket-button\",\n          onClick: () => this.categorySelect('laundry'),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, \"Laundry\"), React.createElement(\"button\", {\n          className: \"ui massive button ticket-button\",\n          onClick: () => this.categorySelect('dryclean'),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, \"DryClean\"));\n\n      case 'laundry':\n        return this.state.items.filter(item => item.item_type === \"laundry\").sort((a, b) => a.id - b.id).map(item => React.createElement(\"button\", {\n          className: \"ui massive button ticket-button\",\n          onClick: () => {\n            this.typeSelect(item);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, item.name));\n\n      case 'dryclean':\n        return this.state.items.filter(item => item.item_type === \"dry clean\").sort((a, b) => a.id - b.id).map(item => React.createElement(\"button\", {\n          className: \"ui massive button ticket-button\",\n          onClick: () => {\n            this.typeSelect(item);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, item.name));\n\n      case 'description':\n        return React.createElement(\"div\", {\n          class: \"description-grid\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"colors\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, this.state.colorDescriptions.map(color => React.createElement(\"button\", {\n          className: color + ' ui massive button ticket-button',\n          onClick: () => {\n            this.props.addDescription(color);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, color))), React.createElement(\"div\", {\n          class: \"fabrics\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, this.state.fabricDescriptions.map(fabric => React.createElement(\"button\", {\n          className: \"ui massive button ticket-button\",\n          onClick: () => {\n            this.props.addDescription(fabric);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, fabric))), React.createElement(\"div\", {\n          class: \"new-item\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          className: \"ui massive button ticket-button\",\n          onClick: () => this.newItem(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, \"NEW ITEM\")));\n\n      case 'new item?':\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, \"New Item?\"), React.createElement(\"button\", {\n          className: \"ui massive button\",\n          onClick: () => this.buttonMenuSelect('category'),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, \"Yes\"), React.createElement(\"button\", {\n          className: \"ui massive button\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, \"No\"));\n\n      default:\n        return null;\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      class: \"button-grid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"row-topB\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, this.renderSwitch(this.state.buttonMenu)), React.createElement(\"div\", {\n      class: \"row-bottomB\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      style: {},\n      className: \"ui blue massive button ticket-button\",\n      onClick: () => this.placeOrder,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"PLACE ORDER\"), React.createElement(\"button\", {\n      style: {},\n      className: \"ui massive button ticket-button\",\n      onClick: () => this.props.mainMenu('main'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"HOME\")));\n  }\n\n}\n\nexport default Buttons;","map":{"version":3,"sources":["/Users/freddyflores/flatiron/code/Mod5/Mod5-Project/client/src/ticket/TicketButtons.js"],"names":["React","Buttons","Component","state","items","props","user","buttonMenu","colorDescriptions","fabricDescriptions","buttonMenuSelect","value","setState","categorySelect","select","category","typeSelect","item","setCurrentItem","newItem","placeOrder","renderSwitch","param","filter","item_type","sort","a","b","id","map","name","color","addDescription","fabric","render","mainMenu"],"mappings":"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","sourcesContent":["import React from 'react'\n\nclass Buttons extends React.Component {\n  \n    state={\n        items: this.props.user.items,\n        \n        buttonMenu: 'category',\n\n        colorDescriptions : [\"white\", \"black\", \"blue\", 'red', 'tan', 'brown', 'gray', 'pink'],\n\n        fabricDescriptions : ['silk', 'linen', 'rayon', 'wool']\n\n    }\n\n    buttonMenuSelect=(value)=>{\n        this.setState({\n        buttonMenu: value\n        })\n    }\n    \n    categorySelect = (select) => {\n        this.setState({\n            category: select\n        })\n        this.buttonMenuSelect(select)\n    }\n    \n    typeSelect=(item)=>{\n        this.props.setCurrentItem(item)\n        this.buttonMenuSelect('description')\n    }\n\n    newItem = () => {\n        this.props.newItem()\n        this.buttonMenuSelect(this.state.category)\n    }\n\n\n    placeOrder = () => {\n        this.buttonMenuSelect()\n        this.props.placeOrder()\n    }\n    \n    renderSwitch(param) {\n        switch(param) {\n            case 'category':\n                return (\n                    <div>\n                        <button className=\"ui massive button ticket-button\" onClick={()=>this.categorySelect('laundry')}>Laundry</button>\n                        <button className={\"ui massive button ticket-button\"} onClick={()=>this.categorySelect('dryclean')}>DryClean</button>\n                    </div>\n                )\n            case 'laundry':\n                return this.state.items.filter(item => item.item_type === \"laundry\").sort((a, b) => a.id - b.id).map(item => <button className={\"ui massive button ticket-button\"} onClick={()=>{ this.typeSelect(item)}} >{item.name}</button>)\n            case 'dryclean':\n                return this.state.items.filter(item => item.item_type === \"dry clean\").sort((a, b) => a.id - b.id).map(item => <button className=\"ui massive button ticket-button\" onClick={()=>{ this.typeSelect(item)}} >{item.name}</button>)\n            case 'description':\n                return (\n                    <div class=\"description-grid\">\n                        <div class=\"colors\">\n                            {this.state.colorDescriptions.map(color => <button className={color + ' ui massive button ticket-button'} onClick={()=>{ this.props.addDescription(color)}} >{color}</button>)}\n                        </div>\n                        <div class='fabrics'>\n                            {this.state.fabricDescriptions.map(fabric => <button className=\"ui massive button ticket-button\" onClick={()=>{ this.props.addDescription(fabric)}} >{fabric}</button>)}\n                        </div>\n                        <div class= 'new-item'>\n                            <button className=\"ui massive button ticket-button\" onClick={()=> this.newItem()}>NEW ITEM</button>\n                        </div>\n                    </div>\n                )\n            case 'new item?':\n                    return (\n                        <div>\n                            <h1>New Item?</h1>\n                            <button className= \"ui massive button\" onClick={()=> this.buttonMenuSelect('category')}>Yes</button>\n                            <button className= \"ui massive button\">No</button>\n                        </div>\n                    )\n            default: \n                return null; \n        }\n    }\n    \n    \n      render() {\n        return(\n          <div class=\"button-grid\">\n            {  \n                <div class='row-topB'>\n                    {this.renderSwitch(this.state.buttonMenu)}  \n                </div>\n            \n            } \n            <div class='row-bottomB'>\n            <button style={{}} className=\"ui blue massive button ticket-button\" onClick={()=>this.placeOrder}>PLACE ORDER</button>\n            <button style={{}} className=\"ui massive button ticket-button\" onClick={()=>this.props.mainMenu('main')}>HOME</button> \n\n            </div>\n          </div>\n        )\n      }\n\n    \n  \n\n  }\n  \n  export default Buttons;"]},"metadata":{},"sourceType":"module"}